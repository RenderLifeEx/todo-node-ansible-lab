name: Deploy to production server
on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Start Notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.MN_TG_CHAT_ID }}
          token: ${{ secrets.TG_BOT_TOKEN }}
          message: |
            ============= üõ†Ô∏è Backend ===============
            ‚ôªÔ∏è –°–µ–π—á–∞—Å –±—É–¥—É—Ç –≤—ã–∫–∞—á–µ–Ω—ã –Ω–æ–≤—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è

      - name: Git clone repository
        uses: actions/checkout@v4

      # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js 20.x (LTS)
      - name: Setup Node.js
        uses: actions/checkout@v4
        with:
          node-version: 'lts/iron'
          cache: 'pnpm'

      - name: List
        run: ls

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies with pnpm
        run: pnpm install

      - name: Compile ts to js
        run: pnpm run build

      - name: Create BZIP deployment package
        run: tar -cjf appBackend.tar.bz2 ./*

      - name: Copy file to serve
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: appBackend.tar.bz2
          target: ~/uploads/

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd ~/backend/
            kill -9 $(lsof -t -i:1337)

            # –£–¥–∞–ª—è–µ—Ç –≤—Å–µ –∫—Ä–æ–º–µ –ø–∞–ø–∫–∏ node_modules –∏ public
            ls | grep -v "\(node_modules\|db\)" | xargs rm -rfv

            # –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
            tar -C ./ -xjf ~/uploads/appBackend.tar.bz2 --strip-components 1
            rm -rf ~/uploads/appBackend.tar.bz2

            # –ï—Å–ª–∏ –Ω–µ—Ç todos.js, –∫–æ–ø–∏—Ä—É–µ–º –∏–∑ –ø—Ä–∏–º–µ—Ä–∞
            if [ ! -f "db/todos.json" ]; then
              cp db/todos.example.json db/todos.js
              echo "‚úÖ –§–∞–π–ª db/todos.json —Å–æ–∑–¥–∞–Ω –∏–∑ –ø—Ä–∏–º–µ—Ä–∞"
            else
              echo "üîπ –§–∞–π–ª db/todos.json —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è"
            fi

            # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
            pnpm install

            # –ò–º—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏–∑ ecosystem.config.js
            APP_NAME="todo-backend"
            pm2 stop $APP_NAME || true
            pm2 delete $APP_NAME || true

            # –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞
            pm2 start ~/backend/ecosystem.config.js --env production

      - name: Success Notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.MN_TG_CHAT_ID }}
          token: ${{ secrets.TG_BOT_TOKEN }}
          message: |
            üéâ –î–µ–ø–ª–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ¬´jQuery Todo - üõ†Ô∏è Backend
            –Ω–∞ —Å–µ—Ä–≤–µ—Ä –ú–µ—á—Ç—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω.
            –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞: ${{ github.event.commits[0].message }}

      - name: Failed Notification
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.MN_TG_CHAT_ID }}
          token: ${{ secrets.TG_BOT_TOKEN }}
          message: |
            üî• –î–µ–ø–ª–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ¬´jQuery Todo - üõ†Ô∏è Backend
            –Ω–∞ —Å–µ—Ä–≤–µ—Ä –ú–µ—á—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω –Ω–µ—É–¥–∞—á–µ–π.
            –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞: ${{ github.event.commits[0].message }}
