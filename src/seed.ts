import { db, closeConnection } from "./db";
import { todos } from ".//schema";
import { eq } from "drizzle-orm";

async function seed() {
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–ª–∞–≥–∞ --clear
        const shouldClear = process.argv.includes("--clear");

        if (shouldClear) {
            // –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
            await db.delete(todos).where(eq(todos.id, todos.id)); // –£–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏
            console.log("üßπ –¢–∞–±–ª–∏—Ü–∞ todos –æ—á–∏—â–µ–Ω–∞");
        }

        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        await db
            .insert(todos)
            .values([
                { title: "–ö—É–ø–∏—Ç—å –º–æ–ª–æ–∫–æ", position: 500 },
                { title: "–ò–∑—É—á–∏—Ç—å Docker", completed: true, position: 400 },
                { title: "–í—ã–∫–∞—Ç–∏—Ç—å —Ñ–∏—á—É", completed: true, position: 300 },
            ]);

        console.log("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã");
    } catch (err) {
        console.error("‚ùå –û—à–∏–±–∫–∞:", err);
        process.exit(1);
    } finally {
        await closeConnection(); 
        process.exit(0);
    }
}

seed();
